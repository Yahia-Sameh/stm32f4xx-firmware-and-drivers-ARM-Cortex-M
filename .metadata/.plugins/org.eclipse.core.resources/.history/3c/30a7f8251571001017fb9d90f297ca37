/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

// Configure Stream 0 for memory-to-peripheral transfer:
void DMA_Config() {
    DMA->Stream[0].DMA_SxCR = 0;  // Disable stream first
    DMA->Stream[0].DMA_SxPAR = 0x40021000UL;  // Peripheral address (e.g., UART DR)
    DMA->Stream[0].DMA_SxM0AR = 0x20000000UL; // Memory address (source buffer)
    DMA->Stream[0].DMA_SxNDTR = 256;          // Transfer 256 items
    DMA->Stream[0].DMA_SxFCR = 0x21;          // FIFO threshold: 1/4 full, enable FIFO
    DMA->Stream[0].DMA_SxCR = (1 << 0)        // Enable stream (EN=1)
                            | (1 << 4)        // Memory increment (MINC=1)
                            | (0 << 6)         // Peripheral increment (PINC=0)
                            | (0x1 << 11);     // Channel selection (CHSEL=1)
}
